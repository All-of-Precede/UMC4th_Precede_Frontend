// Generated by view binder compiler. Do not edit!
package com.example.precede1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.precede1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFinder;

  @NonNull
  public final Button btnFirstWatch;

  @NonNull
  public final Button btnIndividual;

  @NonNull
  public final Button btnOrgan;

  @NonNull
  public final Button btnPolicy;

  @NonNull
  public final Button btnUse;

  @NonNull
  public final Button btnUse3;

  @NonNull
  public final EditText editTextTextEmailAddress;

  @NonNull
  public final EditText editTextTextPassword2;

  @NonNull
  public final TextView id;

  @NonNull
  public final TextView password;

  @NonNull
  public final RadioButton radioButton1;

  @NonNull
  public final RadioButton radioButton2;

  @NonNull
  public final RadioGroup radioGroup1;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFinder,
      @NonNull Button btnFirstWatch, @NonNull Button btnIndividual, @NonNull Button btnOrgan,
      @NonNull Button btnPolicy, @NonNull Button btnUse, @NonNull Button btnUse3,
      @NonNull EditText editTextTextEmailAddress, @NonNull EditText editTextTextPassword2,
      @NonNull TextView id, @NonNull TextView password, @NonNull RadioButton radioButton1,
      @NonNull RadioButton radioButton2, @NonNull RadioGroup radioGroup1) {
    this.rootView = rootView;
    this.btnFinder = btnFinder;
    this.btnFirstWatch = btnFirstWatch;
    this.btnIndividual = btnIndividual;
    this.btnOrgan = btnOrgan;
    this.btnPolicy = btnPolicy;
    this.btnUse = btnUse;
    this.btnUse3 = btnUse3;
    this.editTextTextEmailAddress = editTextTextEmailAddress;
    this.editTextTextPassword2 = editTextTextPassword2;
    this.id = id;
    this.password = password;
    this.radioButton1 = radioButton1;
    this.radioButton2 = radioButton2;
    this.radioGroup1 = radioGroup1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_finder;
      Button btnFinder = ViewBindings.findChildViewById(rootView, id);
      if (btnFinder == null) {
        break missingId;
      }

      id = R.id.btn_firstWatch;
      Button btnFirstWatch = ViewBindings.findChildViewById(rootView, id);
      if (btnFirstWatch == null) {
        break missingId;
      }

      id = R.id.btn_individual;
      Button btnIndividual = ViewBindings.findChildViewById(rootView, id);
      if (btnIndividual == null) {
        break missingId;
      }

      id = R.id.btn_organ;
      Button btnOrgan = ViewBindings.findChildViewById(rootView, id);
      if (btnOrgan == null) {
        break missingId;
      }

      id = R.id.btn_policy;
      Button btnPolicy = ViewBindings.findChildViewById(rootView, id);
      if (btnPolicy == null) {
        break missingId;
      }

      id = R.id.btn_use;
      Button btnUse = ViewBindings.findChildViewById(rootView, id);
      if (btnUse == null) {
        break missingId;
      }

      id = R.id.btn_use3;
      Button btnUse3 = ViewBindings.findChildViewById(rootView, id);
      if (btnUse3 == null) {
        break missingId;
      }

      id = R.id.editTextTextEmailAddress;
      EditText editTextTextEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextEmailAddress == null) {
        break missingId;
      }

      id = R.id.editTextTextPassword2;
      EditText editTextTextPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPassword2 == null) {
        break missingId;
      }

      id = R.id.id;
      TextView id_ = ViewBindings.findChildViewById(rootView, id);
      if (id_ == null) {
        break missingId;
      }

      id = R.id.password;
      TextView password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.radioButton1;
      RadioButton radioButton1 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton1 == null) {
        break missingId;
      }

      id = R.id.radioButton2;
      RadioButton radioButton2 = ViewBindings.findChildViewById(rootView, id);
      if (radioButton2 == null) {
        break missingId;
      }

      id = R.id.radioGroup1;
      RadioGroup radioGroup1 = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup1 == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnFinder, btnFirstWatch,
          btnIndividual, btnOrgan, btnPolicy, btnUse, btnUse3, editTextTextEmailAddress,
          editTextTextPassword2, id_, password, radioButton1, radioButton2, radioGroup1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
