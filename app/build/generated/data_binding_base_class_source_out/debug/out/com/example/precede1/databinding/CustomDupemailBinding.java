// Generated by view binder compiler. Do not edit!
package com.example.precede1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.precede1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomDupemailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button successButton2;

  @NonNull
  public final AppCompatButton successButton3;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView33;

  private CustomDupemailBinding(@NonNull ConstraintLayout rootView, @NonNull Button successButton2,
      @NonNull AppCompatButton successButton3, @NonNull TextView textView,
      @NonNull TextView textView14, @NonNull TextView textView15, @NonNull TextView textView33) {
    this.rootView = rootView;
    this.successButton2 = successButton2;
    this.successButton3 = successButton3;
    this.textView = textView;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView33 = textView33;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomDupemailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomDupemailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_dupemail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomDupemailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.successButton2;
      Button successButton2 = ViewBindings.findChildViewById(rootView, id);
      if (successButton2 == null) {
        break missingId;
      }

      id = R.id.successButton3;
      AppCompatButton successButton3 = ViewBindings.findChildViewById(rootView, id);
      if (successButton3 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView33;
      TextView textView33 = ViewBindings.findChildViewById(rootView, id);
      if (textView33 == null) {
        break missingId;
      }

      return new CustomDupemailBinding((ConstraintLayout) rootView, successButton2, successButton3,
          textView, textView14, textView15, textView33);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
